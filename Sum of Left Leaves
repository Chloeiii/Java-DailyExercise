Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

&&java&&
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        if(root==null) return 0;
        
        if(root.left!=null){
            if(root.left.left==null && root.left.right==null){// root.left is one of the leaves, and it's on the left
                return root.left.val + sumOfLeftLeaves(root.right);
            }
            return sumOfLeftLeaves(root.left)+sumOfLeftLeaves(root.right);
            
        }else if(root.right!=null){
            return sumOfLeftLeaves(root.right); 
        }else{
            return 0;
        }
    }
}
