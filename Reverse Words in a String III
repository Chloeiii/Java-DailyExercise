**Reverse Words in a String III

  Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace
  and initial word order.

  Example 1:
  Input: "Let's take LeetCode contest"
  Output: "s'teL ekat edoCteeL tsetnoc"
  Note: In the string, each word is separated by single space and there will not be any extra space in the string.
  
  
  
  &&java&&
  public class Solution {
    public String reverseWords(String s){
        //split the string into a string array
        String result ="";
        String[] parts = s.split(" ");
        for(int i=0; i<parts.length; i++){
            parts[i]=reverseWd(parts[i]);
            if(i<parts.length-1){
                result+=parts[i]+" ";
            }else{//avoid the last space
                result+=parts[i];
            }
        }
        return result;
    }
    //reverse each string
    public String reverseWd (String s){
        char[] in = s.toCharArray();
        int begin=0;
        int end=in.length-1;
        char temp;
        while(end>begin){
            temp = in[begin];
            in[begin]=in[end];
            in[end] = temp;
            end--;
            begin++;
        }
        return new String(in);
    }
  } 
