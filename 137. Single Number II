Given an array of integers, every element appears three times except for one, which appears exactly once. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?


&&python&&
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        res = {}
        for i in nums:
            if str(i) not in res:
                res[str(i)] = 1
            else:
                res[str(i)] +=1
        for i in res:
            if res[i]==1:
                return int(i)
              
