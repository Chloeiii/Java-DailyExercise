
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.




&&java&&
public class Solution {
    public char findTheDifference(String s, String t) {
        // Initialize int variables to store sum of ASCII codes for each string
        int sCode = 0;
        int tCode = 0;
        for(int i=0; i<s.length(); i++){
            sCode+=(int)s.charAt(i);
        }
        for(int j=0; j<t.length(); j++){
            tCode+=(int)t.charAt(j);
        }
        return (char)(tCode-sCode);
    }
}


UPDATE:
Thanks to @zzhai for providing this optimization! :) 
"1 optimization: As t.length() is just 1 character longer than s.length(), we can use 1 pass to process both strings (20% better runtime performance)."
public char findTheDifference(String s, String t) {
        int charCode = t.charAt(s.length());
        // Iterate through both strings and char codes
        for (int i = 0; i < s.length(); ++i) {
              charCode -= (int)s.charAt(i);
              charCode += (int)t.charAt(i); 
        }
        return (char)charCode;
    }
